{
  "version": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "name": "Demo_Squmpfile",
  "requests": [
    {
      "name": "Req1",
      "script": [
        "local s = require('sqump')",
        "",
        "local resp = s.fetch('https://pokeapi.co/api/v2/pokemon/{{.pokemon}}')",
        "local mon = s.from_json(resp.body)",
        "print(mon.id, mon.types[1].type.name)",
        "",
        "return {",
        "  pokemon = mon,",
        "}"
      ]
    },
    {
      "name": "Req2",
      "script": [
        "local res = require('Req1')",
        "",
        "local k = require('sqump_kafka')",
        "local brokers = {'localhost:9092'}",
        "local topic = 'weights'",
        "",
        "k.provision_topic(brokers, topic)",
        "",
        "local p = k.new_producer(brokers, topic, 5)",
        "p:write(tostring(res.pokemon.id), tostring(res.pokemon.weight))",
        "p:close()",
        "print('done writing!')"
      ]
    },
    {
      "name": "Req3",
      "script": [
        "local k = require('sqump_kafka')",
        "",
        "local brokers = {'localhost:9092'}",
        "local topic = 'weights'",
        "",
        "math.randomseed(os.time())",
        "local c = k.new_consumer(brokers, k.random_group_id(), topic, 'first')",
        "",
        "local sum, count = 0, 0",
        "while true do",
        "  local msg = c:read_message(5, false)",
        "  if msg == nil then",
        "    break",
        "  end",
        "  sum = sum + tonumber(msg.data)",
        "  count = count + 1",
        "end",
        "c:close()",
        "",
        "print('Total weight:', sum)",
        "print('Average:', sum / count)"
      ]
    }
  ],
  "environment": {
    "prod": {
      "pokemon": "psyduck"
    },
    "staging": {
      "pokemon": "snorlax"
    }
  }
}